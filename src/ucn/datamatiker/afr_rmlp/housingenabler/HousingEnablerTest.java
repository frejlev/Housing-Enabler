package ucn.datamatiker.afr_rmlp.housingenabler;

import android.os.Bundle;
import android.app.Activity;
import android.text.InputFilter.LengthFilter;
import android.util.Log;
import android.view.Menu;
import android.widget.TextView;
import android.widget.Toast;

public class HousingEnablerTest extends Activity {
	
	private Integer[][] score = new Integer[14][];
	private Integer[] total = new Integer[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
	
	private Integer[] testResult = new Integer[] { 0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 1, 1, 1, 1, 0, 	0, 0, 1, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 	0, 0, 0, 0, 	0, 0, 1, 1, 1, 0, 1, 0, 	1, 0, 0, 1, 1, 0, 0, 1, 0, 		0, 0, 0, 0, 0, 1, 0, 1, 	1, 0, 0, 0, 0, 0, 1, 0, 0, 		1, 0, 1, 0, 0, 0, 0, 0, 	0, 1, 0, 0, 0, 0, 0, 	0, 0, 0, 1, 0, 0, 1, 1, 	0, 0, 1, 0, 0, 0, 	0, 0, 1, 0, 1, 0, 1, 0, 	0, 1, 0, 1, 1, 0, 1, 0, 	1, 1, 0, 0, 0, 1, 1, 	0, 0, 0, 0, 0, 1, 0, 	1, 1, 0, 0, 0, 1, 1, 1, 0, 		0, 0, 1, 0, 0, 1, 0, 	0, 0, 1, 0, 1, 0, 1, 	1, 0, 0, 0, 1, 1, 0, 1, 1, 		0, 0, 1, 0 };

	private Integer[] testUser = new Integer[] { 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0 };
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_housing_enabler_test);
		
		this.addValuesToArray();
		
		this.generateTotal();
	}
	
	private void addValuesToArray() {
		// Instantiate int array:
		
		score[0] = new Integer[]{ 0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 1, 1, 2, 4, 0, 	0, 0, 3, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 	0, 0, 0, 0, 	0, 0, 1, 1, 2, 0, 4, 0, 	3, 0, 0, 1, 1, 0, 0, 1, 0, 		0, 0, 0, 0, 0, 1, 0, 1, 	2, 0, 0, 0, 0, 0, 3, 0, 0, 		1, 0, 3, 0, 0, 0, 0, 0, 	0, 3, 0, 0, 0, 0, 0, 	0, 0, 0, 3, 0, 0, 1, 1, 	0, 0, 1, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 1, 0, 	0, 4, 0, 3, 1, 0, 0, 0, 	2, 1, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 4, 0, 	3, 1, 0, 0, 0, 2, 1, 0, 0, 		0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 4, 0, 3, 	1, 0, 0, 0, 2, 1, 0, 0, 0, 		0, 0, 0, 0 };
		score[1] = new Integer[]{ 0, 2, 2, 2, 2, 1, 1, 0, 	2, 1, 0, 2, 4, 1, 0, 3, 	0, 1, 0, 0, 0, 0, 0, 3, 	3, 3, 0, 0, 	0, 3, 0, 1, 	0, 0, 3, 3, 3, 0, 1, 3, 	3, 3, 1, 2, 1, 0, 1, 3, 4, 		0, 0, 0, 3, 3, 3, 0, 3, 	3, 0, 0, 0, 0, 0, 3, 0, 0, 		3, 0, 3, 0, 0, 3, 0, 0, 	3, 3, 0, 0, 2, 0, 1, 	3, 3, 1, 3, 3, 1, 1, 1, 	0, 3, 3, 4, 3, 3, 	0, 0, 0, 0, 0, 0, 3, 0, 	3, 2, 0, 3, 0, 2, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 	0, 1, 0, 0, 0, 2, 0, 	3, 0, 2, 0, 0, 0, 0, 0, 0, 		0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 2, 0, 3, 	0, 2, 0, 0, 0, 0, 0, 0, 0, 		0, 3, 3, 0 };
		score[2] = new Integer[]{ 0, 3, 3, 3, 3, 2, 1, 0, 	2, 1, 0, 0, 0, 3, 0, 3, 	0, 1, 0, 0, 0, 0, 0, 3, 	3, 3, 0, 0, 	0, 3, 0, 1, 	0, 0, 3, 3, 4, 0, 3, 3, 	3, 3, 1, 2, 1, 0, 3, 0, 0, 		0, 0, 0, 3, 3, 3, 0, 3, 	4, 0, 0, 0, 0, 0, 3, 0, 0, 		4, 0, 4, 0, 0, 3, 0, 0, 	3, 3, 0, 0, 3, 0, 1, 	3, 3, 1, 3, 3, 1, 1, 1, 	0, 4, 0, 0, 3, 3, 	0, 0, 0, 0, 0, 0, 4, 0, 	0, 3, 0, 3, 0, 2, 0, 0, 	1, 0, 0, 0, 0, 0, 0, 	0, 1, 0, 0, 0, 3, 0, 	3, 0, 2, 0, 0, 1, 0, 0, 0, 		0, 0, 0, 0, 0, 0, 0, 	1, 1, 0, 0, 3, 0, 3, 	0, 2, 0, 0, 1, 0, 0, 0, 0, 		0, 3, 3, 0 };
		score[3] = new Integer[]{ 0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 1, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 	0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 3, 3, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 0, 0, 0 };
		score[4] = new Integer[]{ 3, 1, 3, 2, 3, 0, 3, 3, 	3, 4, 3, 2, 0, 0, 1, 0, 	1, 3, 0, 3, 1, 3, 0, 0, 	3, 3, 3, 3, 	0, 3, 0, 0, 	0, 3, 0, 0, 3, 3, 0, 3, 	3, 3, 0, 3, 1, 1, 0, 0, 0, 		3, 3, 3, 0, 3, 2, 3, 0, 	3, 3, 1, 1, 3, 0, 0, 0, 0, 		0, 0, 0, 0, 0, 3, 0, 3, 	3, 0, 0, 0, 3, 0, 0, 	3, 3, 1, 3, 3, 0, 3, 2, 	1, 0, 0, 0, 3, 4, 	1, 0, 2, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 	2, 4, 1, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 0, 0, 0, 0, 2, 0, 	0, 1, 1, 3, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 3, 3, 1 };
		score[5] = new Integer[]{ 3, 1, 3, 2, 3, 0, 3, 3, 	2, 3, 3, 0, 0, 0, 1, 0, 	1, 3, 0, 3, 1, 3, 0, 0, 	3, 3, 2, 2, 	0, 3, 0, 0, 	0, 3, 0, 0, 3, 2, 3, 3, 	3, 3, 0, 3, 1, 1, 0, 0, 0, 		3, 3, 3, 0, 3, 3, 3, 0, 	3, 2, 1, 1, 1, 0, 0, 0, 0, 		0, 0, 0, 0, 0, 3, 0, 3, 	3, 0, 0, 0, 3, 2, 0, 	3, 3, 1, 3, 3, 0, 3, 2, 	1, 0, 0, 0, 3, 3, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 3, 3, 0, 0, 0, 	2, 2, 0, 0, 0, 0, 2, 	0, 4, 1, 0, 0, 0, 0, 	3, 3, 0, 0, 0, 2, 2, 0, 0, 		0, 0, 0, 0, 0, 0, 0, 	1, 1, 0, 0, 0, 0, 3, 	3, 0, 0, 0, 2, 2, 0, 0, 0, 		0, 3, 3, 0 };
		score[6] = new Integer[]{ 0, 0, 2, 3, 3, 0, 3, 3, 	1, 4, 4, 0, 0, 1, 4, 4, 	3, 3, 0, 4, 1, 1, 0, 0, 	0, 0, 1, 1, 	0, 0, 0, 0, 	0, 3, 0, 0, 3, 3, 0, 3, 	3, 3, 0, 3, 1, 1, 0, 0, 0, 		3, 3, 3, 0, 0, 0, 3, 0, 	3, 3, 0, 1, 2, 0, 0, 0, 0, 		3, 3, 3, 0, 0, 0, 0, 3, 	0, 4, 0, 0, 0, 0, 0, 	3, 3, 1, 3, 3, 0, 3, 2, 	1, 0, 0, 0, 1, 3, 	1, 0, 2, 0, 0, 0, 0, 0, 	0, 0, 3, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 	0, 4, 2, 0, 0, 0, 3, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 0, 3, 0, 0, 2, 2, 	0, 0, 0, 0, 0, 3, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 0, 0, 1 };
		score[7] = new Integer[]{ 0, 3, 0, 0, 1, 0, 1, 0, 	2, 0, 0, 1, 0, 0, 0, 0, 	0, 4, 3, 0, 0, 0, 0, 0, 	1, 1, 0, 0, 	0, 1, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 0, 0, 0, 3, 3, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 2, 0, 		0, 0, 0, 0, 0, 1, 0, 0, 	1, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 2, 	0, 3, 0, 0, 0, 0, 0, 1, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 2, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		2, 0, 0, 0, 0, 0, 0, 	1, 1, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 2, 		0, 1, 1, 0 };
		score[8] = new Integer[]{ 0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 3, 3, 	0, 0, 0, 0, 	0, 3, 0, 0, 0, 0, 1, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 0, 0, 0, 0, 0, 3, 0, 	0, 0, 0, 0, 0, 0, 0, 3, 0, 		0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 3, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 3, 4, 	0, 0, 0, 3, 4, 3, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 3, 0, 0, 	0, 0, 3, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		3, 0, 0, 0, 0, 0, 0, 	2, 2, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 3, 		0, 0, 0, 2 };
		score[9] = new Integer[]{ 0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 3, 3, 	0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 1, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 1, 3, 		0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 3, 	0, 0, 0, 1, 0, 2, 0, 0, 	0, 0, 1, 1, 1, 3, 2, 2, 	1, 1, 3, 2, 1, 0, 0, 	0, 0, 0, 0, 0, 0, 1, 	1, 1, 3, 2, 2, 1, 1, 3, 2, 		1, 0, 0, 0, 0, 0, 0, 	1, 0, 0, 0, 0, 1, 1, 	1, 3, 2, 2, 1, 1, 3, 2, 1, 		0, 0, 0, 0 };
	   score[10] = new Integer[]{ 0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 4, 4, 	0, 0, 0, 0, 	0, 4, 0, 0, 0, 0, 1, 1, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 0, 0, 0, 0, 0, 4, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 4, 		0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 	1, 1, 1, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 4, 	0, 0, 0, 4, 4, 0, 0, 4, 	0, 0, 0, 1, 0, 2, 3, 4, 	1, 4, 4, 4, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 	1, 0, 2, 3, 4, 1, 4, 4, 4, 		0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 1, 	0, 2, 3, 4, 1, 4, 4, 4, 0, 		0, 0, 0, 1 };
	   score[11] = new Integer[]{ 0, 1, 1, 1, 1, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 1, 0, 0, 0, 	0, 0, 0, 0, 	0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 1, 0, 		0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 3, 	0, 3, 0, 0, 3, 0, 0, 4, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 1, 0, 	3, 4, 2, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 1, 0, 3, 0, 0, 0, 	0, 0, 3, 2, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		1, 0, 0, 0 };
	   score[12] = new Integer[]{ 3, 3, 3, 3, 3, 0, 3, 3, 	3, 1, 3, 3, 0, 1, 1, 1, 	3, 3, 3, 3, 1, 3, 3, 3, 	3, 3, 3, 3, 	3, 3, 3, 1, 	3, 3, 0, 1, 3, 3, 1, 3, 	3, 3, 3, 4, 2, 1, 0, 0, 0, 		3, 3, 3, 3, 3, 3, 3, 0, 	3, 3, 1, 1, 3, 1, 0, 2, 0, 		1, 1, 1, 3, 3, 3, 3, 3, 	3, 1, 3, 4, 3, 3, 2, 	3, 3, 1, 3, 3, 3, 4, 3, 	1, 0, 0, 0, 3, 3, 	3, 0, 2, 3, 3, 0, 0, 1, 	0, 0, 3, 0, 1, 0, 0, 0, 	1, 3, 1, 0, 2, 1, 3, 	3, 4, 1, 0, 1, 0, 3, 	0, 1, 0, 0, 0, 1, 3, 1, 0, 		2, 1, 0, 3, 0, 1, 0, 	0, 0, 3, 3, 0, 3, 0, 	1, 0, 0, 0, 1, 3, 1, 0, 2, 		1, 3, 3, 3 };
	   score[13] = new Integer[]{ 3, 3, 4, 3, 4, 0, 4, 3, 	3, 0, 2, 3, 0, 1, 2, 2, 	3, 3, 3, 0, 1, 3, 4, 3, 	4, 4, 4, 4, 	4, 4, 4, 4, 	3, 3, 0, 1, 3, 3, 1, 4, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		3, 3, 3, 3, 3, 3, 3, 0, 	3, 3, 0, 0, 0, 3, 0, 4, 0, 		1, 1, 1, 4, 4, 4, 3, 3, 	4, 1, 4, 4, 4, 4, 3, 	4, 4, 1, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 4, 4, 	3, 0, 3, 3, 3, 0, 0, 4, 	0, 0, 1, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 4, 0, 4, 	3, 4, 1, 1, 0, 0, 1, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		4, 0, 3, 1, 1, 3, 3, 	0, 3, 3, 4, 0, 1, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 4, 		0, 4, 4, 4 };
		
	}
	
	private int generateTotal() {
		
		int nrOfHandicaps = score.length;
		Integer superTotal = 0;
		
		for (int i = 0; nrOfHandicaps > i; i++) {
			
			int nrOfQuestions = score[i].length;
			
			// Only if value 1 in client handicap
			if (testUser[i] == 1) {
				for(int j = 0; nrOfQuestions > j; j++) {
					
					// Only if question as answered to be true..
					if (testResult[j] == 1) {
						total[i] += score[i][j];
					}
					
				}
			}
				
		}
		
		TextView result = (TextView)findViewById(R.id.textView1);
		TextView superTotalView = (TextView)findViewById(R.id.textView2);
		
		int index = 0;
		while (index < total.length) {
			if (index == 0)
				result.setText(total[index].toString() + " ");
			else
				result.append(total[index].toString() + " ");
			
			superTotal += total[index];
			index++;
		}
		
		superTotalView.setText("Total: " + superTotal.toString());
		
		return 0;
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.housing_enabler_test, menu);
		return true;
	}

}
