package ucn.datamatiker.afr_rmlp.housingenabler.helpers;

import java.util.ArrayList;
import android.content.Context;
import android.util.Log;

public class CalculationHelper {
	
	// Variables
	private Integer[][] score = new Integer[14][];
	private Integer[] total = new Integer[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
	private String[] questionKeys;
	private Context context;
	
	public CalculationHelper(Context context) {
		
		this.context = context;
		
		this.addValuesToArray();
		this.addQuestionKeys();
		
	}

	private void addValuesToArray() {
		
		// Instantiate int array:
		score[0] = new Integer[]{ 0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 1, 1, 2, 4, 0, 	0, 0, 3, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 	0, 0, 0, 0, 	0, 0, 1, 1, 2, 0, 4, 0, 	3, 0, 0, 1, 1, 0, 0, 1, 0, 		0, 0, 0, 0, 0, 1, 0, 1, 	2, 0, 0, 0, 0, 0, 3, 0, 0, 		1, 0, 3, 0, 0, 0, 0, 0, 	0, 3, 0, 0, 0, 0, 0, 	0, 0, 0, 3, 0, 0, 1, 1, 	0, 0, 1, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 1, 0, 	0, 4, 0, 3, 1, 0, 0, 0, 	2, 1, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 4, 0, 	3, 1, 0, 0, 0, 2, 1, 0, 0, 		0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 4, 0, 3, 	1, 0, 0, 0, 2, 1, 0, 0, 0, 		0, 0, 0, 0 };
		score[1] = new Integer[]{ 0, 2, 2, 2, 2, 1, 1, 0, 	2, 1, 0, 2, 4, 1, 0, 3, 	0, 1, 0, 0, 0, 0, 0, 3, 	3, 3, 0, 0, 	0, 3, 0, 1, 	0, 0, 3, 3, 3, 0, 1, 3, 	3, 3, 1, 2, 1, 0, 1, 3, 4, 		0, 0, 0, 3, 3, 3, 0, 3, 	3, 0, 0, 0, 0, 0, 3, 0, 0, 		3, 0, 3, 0, 0, 3, 0, 0, 	3, 3, 0, 0, 2, 0, 1, 	3, 3, 1, 3, 3, 1, 1, 1, 	0, 3, 3, 4, 3, 3, 	0, 0, 0, 0, 0, 0, 3, 0, 	3, 2, 0, 3, 0, 2, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 	0, 1, 0, 0, 0, 2, 0, 	3, 0, 2, 0, 0, 0, 0, 0, 0, 		0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 2, 0, 3, 	0, 2, 0, 0, 0, 0, 0, 0, 0, 		0, 3, 3, 0 };
		score[2] = new Integer[]{ 0, 3, 3, 3, 3, 2, 1, 0, 	2, 1, 0, 0, 0, 3, 0, 3, 	0, 1, 0, 0, 0, 0, 0, 3, 	3, 3, 0, 0, 	0, 3, 0, 1, 	0, 0, 3, 3, 4, 0, 3, 3, 	3, 3, 1, 2, 1, 0, 3, 0, 0, 		0, 0, 0, 3, 3, 3, 0, 3, 	4, 0, 0, 0, 0, 0, 3, 0, 0, 		4, 0, 4, 0, 0, 3, 0, 0, 	3, 3, 0, 0, 3, 0, 1, 	3, 3, 1, 3, 3, 1, 1, 1, 	0, 4, 0, 0, 3, 3, 	0, 0, 0, 0, 0, 0, 4, 0, 	0, 3, 0, 3, 0, 2, 0, 0, 	1, 0, 0, 0, 0, 0, 0, 	0, 1, 0, 0, 0, 3, 0, 	3, 0, 2, 0, 0, 1, 0, 0, 0, 		0, 0, 0, 0, 0, 0, 0, 	1, 1, 0, 0, 3, 0, 3, 	0, 2, 0, 0, 1, 0, 0, 0, 0, 		0, 3, 3, 0 };
		score[3] = new Integer[]{ 0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 1, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 	0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 3, 3, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 0, 0, 0 };
		score[4] = new Integer[]{ 3, 1, 3, 2, 3, 0, 3, 3, 	3, 4, 3, 2, 0, 0, 1, 0, 	1, 3, 0, 3, 1, 3, 0, 0, 	3, 3, 3, 3, 	0, 3, 0, 0, 	0, 3, 0, 0, 3, 3, 0, 3, 	3, 3, 0, 3, 1, 1, 0, 0, 0, 		3, 3, 3, 0, 3, 2, 3, 0, 	3, 3, 1, 1, 3, 0, 0, 0, 0, 		0, 0, 0, 0, 0, 3, 0, 3, 	3, 0, 0, 0, 3, 0, 0, 	3, 3, 1, 3, 3, 0, 3, 2, 	1, 0, 0, 0, 3, 4, 	1, 0, 2, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 	2, 4, 1, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 0, 0, 0, 0, 2, 0, 	0, 1, 1, 3, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 3, 3, 1 };
		score[5] = new Integer[]{ 3, 1, 3, 2, 3, 0, 3, 3, 	2, 3, 3, 0, 0, 0, 1, 0, 	1, 3, 0, 3, 1, 3, 0, 0, 	3, 3, 2, 2, 	0, 3, 0, 0, 	0, 3, 0, 0, 3, 2, 3, 3, 	3, 3, 0, 3, 1, 1, 0, 0, 0, 		3, 3, 3, 0, 3, 3, 3, 0, 	3, 2, 1, 1, 1, 0, 0, 0, 0, 		0, 0, 0, 0, 0, 3, 0, 3, 	3, 0, 0, 0, 3, 2, 0, 	3, 3, 1, 3, 3, 0, 3, 2, 	1, 0, 0, 0, 3, 3, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 3, 3, 0, 0, 0, 	2, 2, 0, 0, 0, 0, 2, 	0, 4, 1, 0, 0, 0, 0, 	3, 3, 0, 0, 0, 2, 2, 0, 0, 		0, 0, 0, 0, 0, 0, 0, 	1, 1, 0, 0, 0, 0, 3, 	3, 0, 0, 0, 2, 2, 0, 0, 0, 		0, 3, 3, 0 };
		score[6] = new Integer[]{ 0, 0, 2, 3, 3, 0, 3, 3, 	1, 4, 4, 0, 0, 1, 4, 4, 	3, 3, 0, 4, 1, 1, 0, 0, 	0, 0, 1, 1, 	0, 0, 0, 0, 	0, 3, 0, 0, 3, 3, 0, 3, 	3, 3, 0, 3, 1, 1, 0, 0, 0, 		3, 3, 3, 0, 0, 0, 3, 0, 	3, 3, 0, 1, 2, 0, 0, 0, 0, 		3, 3, 3, 0, 0, 0, 0, 3, 	0, 4, 0, 0, 0, 0, 0, 	3, 3, 1, 3, 3, 0, 3, 2, 	1, 0, 0, 0, 1, 3, 	1, 0, 2, 0, 0, 0, 0, 0, 	0, 0, 3, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 	0, 4, 2, 0, 0, 0, 3, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 0, 3, 0, 0, 2, 2, 	0, 0, 0, 0, 0, 3, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 0, 0, 1 };
		score[7] = new Integer[]{ 0, 3, 0, 0, 1, 0, 1, 0, 	2, 0, 0, 1, 0, 0, 0, 0, 	0, 4, 3, 0, 0, 0, 0, 0, 	1, 1, 0, 0, 	0, 1, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 0, 0, 0, 3, 3, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 2, 0, 		0, 0, 0, 0, 0, 1, 0, 0, 	1, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 2, 	0, 3, 0, 0, 0, 0, 0, 1, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 2, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		2, 0, 0, 0, 0, 0, 0, 	1, 1, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 2, 		0, 1, 1, 0 };
		score[8] = new Integer[]{ 0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 3, 3, 	0, 0, 0, 0, 	0, 3, 0, 0, 0, 0, 1, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 0, 0, 0, 0, 0, 3, 0, 	0, 0, 0, 0, 0, 0, 0, 3, 0, 		0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 3, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 3, 4, 	0, 0, 0, 3, 4, 3, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 3, 0, 0, 	0, 0, 3, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		3, 0, 0, 0, 0, 0, 0, 	2, 2, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 3, 		0, 0, 0, 2 };
		score[9] = new Integer[]{ 0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 3, 3, 	0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 1, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 1, 3, 		0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 3, 	0, 0, 0, 1, 0, 2, 0, 0, 	0, 0, 1, 1, 1, 3, 2, 2, 	1, 1, 3, 2, 1, 0, 0, 	0, 0, 0, 0, 0, 0, 1, 	1, 1, 3, 2, 2, 1, 1, 3, 2, 		1, 0, 0, 0, 0, 0, 0, 	1, 0, 0, 0, 0, 1, 1, 	1, 3, 2, 2, 1, 1, 3, 2, 1, 		0, 0, 0, 0 };
	   score[10] = new Integer[]{ 0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 4, 4, 	0, 0, 0, 0, 	0, 4, 0, 0, 0, 0, 1, 1, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 0, 0, 0, 0, 0, 4, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 4, 		0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 	1, 1, 1, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 4, 	0, 0, 0, 4, 4, 0, 0, 4, 	0, 0, 0, 1, 0, 2, 3, 4, 	1, 4, 4, 4, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 	1, 0, 2, 3, 4, 1, 4, 4, 4, 		0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 1, 	0, 2, 3, 4, 1, 4, 4, 4, 0, 		0, 0, 0, 1 };
	   score[11] = new Integer[]{ 0, 1, 1, 1, 1, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 1, 0, 0, 0, 	0, 0, 0, 0, 	0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 1, 0, 		0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 3, 	0, 3, 0, 0, 3, 0, 0, 4, 	0, 0, 0, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 1, 0, 	3, 4, 2, 0, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 1, 0, 3, 0, 0, 0, 	0, 0, 3, 2, 0, 0, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		1, 0, 0, 0 };
	   score[12] = new Integer[]{ 3, 3, 3, 3, 3, 0, 3, 3, 	3, 1, 3, 3, 0, 1, 1, 1, 	3, 3, 3, 3, 1, 3, 3, 3, 	3, 3, 3, 3, 	3, 3, 3, 1, 	3, 3, 0, 1, 3, 3, 1, 3, 	3, 3, 3, 4, 2, 1, 0, 0, 0, 		3, 3, 3, 3, 3, 3, 3, 0, 	3, 3, 1, 1, 3, 1, 0, 2, 0, 		1, 1, 1, 3, 3, 3, 3, 3, 	3, 1, 3, 4, 3, 3, 2, 	3, 3, 1, 3, 3, 3, 4, 3, 	1, 0, 0, 0, 3, 3, 	3, 0, 2, 3, 3, 0, 0, 1, 	0, 0, 3, 0, 1, 0, 0, 0, 	1, 3, 1, 0, 2, 1, 3, 	3, 4, 1, 0, 1, 0, 3, 	0, 1, 0, 0, 0, 1, 3, 1, 0, 		2, 1, 0, 3, 0, 1, 0, 	0, 0, 3, 3, 0, 3, 0, 	1, 0, 0, 0, 1, 3, 1, 0, 2, 		1, 3, 3, 3 };
	   score[13] = new Integer[]{ 3, 3, 4, 3, 4, 0, 4, 3, 	3, 0, 2, 3, 0, 1, 2, 2, 	3, 3, 3, 0, 1, 3, 4, 3, 	4, 4, 4, 4, 	4, 4, 4, 4, 	3, 3, 0, 1, 3, 3, 1, 4, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		3, 3, 3, 3, 3, 3, 3, 0, 	3, 3, 0, 0, 0, 3, 0, 4, 0, 		1, 1, 1, 4, 4, 4, 3, 3, 	4, 1, 4, 4, 4, 4, 3, 	4, 4, 1, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 4, 4, 	3, 0, 3, 3, 3, 0, 0, 4, 	0, 0, 1, 0, 0, 0, 0, 0, 	0, 0, 0, 0, 4, 0, 4, 	3, 4, 1, 1, 0, 0, 1, 	0, 0, 0, 0, 0, 0, 0, 0, 0, 		4, 0, 3, 1, 1, 3, 3, 	0, 3, 3, 4, 0, 1, 0, 	0, 0, 0, 0, 0, 0, 0, 0, 4, 		0, 4, 4, 4 };
		
	}
	
	private void addQuestionKeys() {
		questionKeys = new String[]
		{ "A", "A1", "A2", "A3", "A4", "A5", "A6", "A8", "A9", "A10", "A11", "A12", "A13", "A14", "A15", "A16", "A17", "A18", "A19", "A20", "A21", "A22", "A23", "A24", "A25", "A26", "A27", "A28", 
		  "B", "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "B11", "B12", "B13", "B14", "B15", "B16", "B17", "B18", "B19", "B20", "B21", "B22", "B23", "B24", "B25", "B26", "B27", "B28", "B29", "B30", "B31", "B32", "B33", "B34", "B35", "B36", "B37", "B38", "B39", "B40", "B41", "B42", "B43", "B44", "B45", "B46", 
		  "C", "C1", "C2", "C3", "C4", "C5", "C6", "C7", "C8", "C9", "C10", "C11", "C12", "C13", "C14", "C15", "C17", "C18", "C19", "C20", "C21", "C22", "C23", "C24", "C25", "C26", "C27", "C28", "C29", "C31", "C32", "C33", "C34", "C35", "C36", "C37", "C38", "C39", "C40", "C42", "C43", "C44", "C45", "C46", "C47", "C48", "C49", "C50", "C51", "C61", "C62", "C63", "C64", "C65", "C66", "C67", "C68", "C69", "C70", "C71", "C72", "C73", "C74", "C75", "C76", "C77", "C78", "C79", "C80", "C81", "C82", "C83", "C84", "C85", "C86", "C87" 
		};
	}
	
	public ArrayList<String> getAllQuestions() {
		
		ArrayList<String> allQuestions = new ArrayList<String>();
		
		ArrayList<String> allKeys = new ArrayList<String>();
		int index = 0;
		while (questionKeys.length > index) {
			allKeys.add(questionKeys[index]);
			index++;
		}
		
		for (String questionKey : allKeys) {
			// Get the context from the Activity calling this called (context)...
			allQuestions.add((String)context.getResources().getText(context.getResources().getIdentifier(questionKey, "string", "ucn.datamatiker.afr_rmlp.housingenabler")));
		}
		

		return allQuestions;
	}
	
	public Integer[] generateTotal(Integer[] testUser, Integer[] testResult) {
		
		int nrOfHandicaps = score.length;
		
		for (int i = 0; nrOfHandicaps > i; i++) {
			
			int nrOfQuestions = score[i].length;
			
			// Only if value 1 in client handicap
			if (testUser[i] == 1) {
				for(int j = 0; nrOfQuestions > j; j++) {
					
					// Only if question as answered to be true..
					if (testResult[j] == 1) {
						total[i] += score[i][j];
					}
					
				}
			}
				
		}
		
		return total;
	}
	
}
